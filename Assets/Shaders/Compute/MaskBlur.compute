#pragma kernel CSMain

RWTexture2D<float> Result;
Texture2D<float> Original;
Texture2D<float> EdgeMask;

float2 TextureSize;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID) {
	if (id.x >= (uint)TextureSize.x || id.y >= (uint)TextureSize.y) {
		return;
	}

	float sum = 0.0;
	float edgeSum = 0.0;
	int incr = 0;
	for (int x = -4; x < 4; x++) {
		for (int y = -4; y < 4; y++) {
			sum += Original[int2(id.x + x, id.y + y)];
			edgeSum += EdgeMask[int2(id.x + x, id.y + y)];
			incr++;
		}
	}

	float divisor = float(incr);
	Result[id.xy] = clamp((sum / divisor) + (edgeSum / divisor), 0.0, 1.0);
}